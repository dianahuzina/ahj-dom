{"version":3,"file":"main.js","mappings":";;;;AAAe,MAAMA,SAAS,CAAC;EAC7BC,WAAWA,CAACC,OAAO,EAAE;IACnB,IAAI,CAACA,OAAO,GAAGA,OAAO;EACxB;EAEAC,eAAeA,CAAA,EAAG;IAChB,MAAMC,UAAU,GAAG,IAAI,CAACF,OAAO,CAACG,aAAa,CAAC,cAAc,CAAC;IAC7D,MAAMC,cAAc,GAAG,IAAI,CAACJ,OAAO,CAACG,aAAa,CAAC,YAAY,CAAC;IAE/D,IAAID,UAAU,IAAIE,cAAc,EAAE;MAChCF,UAAU,CAACG,SAAS,CAACC,MAAM,CAAC,aAAa,CAAC;MAC1CF,cAAc,CAACE,MAAM,CAAC,CAAC;IACzB;EACF;EAEAC,YAAYA,CAAA,EAAG;IACb,MAAMC,KAAK,GAAG,IAAI,CAACR,OAAO,CAACS,gBAAgB,CAAC,aAAa,CAAC;IAC1D,MAAMC,KAAK,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IAC3C,MAAMC,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGR,KAAK,CAACS,MAAM,CAAC;IAEvD,KAAK,IAAIC,IAAI,IAAIV,KAAK,EAAE;MACtB,IAAIU,IAAI,CAACC,OAAO,CAACC,EAAE,KAAKP,MAAM,CAACQ,QAAQ,CAAC,CAAC,EAAE;QACzCH,IAAI,CAACb,SAAS,CAACiB,GAAG,CAAC,aAAa,CAAC;QACjCZ,KAAK,CAACL,SAAS,CAACiB,GAAG,CAAC,WAAW,CAAC;QAChCZ,KAAK,CAACa,GAAG,GAAG,kBAAkB;QAC9BL,IAAI,CAACM,WAAW,CAACd,KAAK,CAAC;MACzB;IACF;EACF;AACF;;AC7BuC;AAEvCC,QAAQ,CAACc,gBAAgB,CAAC,kBAAkB,EAAE,MAAM;EAClD,MAAMC,KAAK,GAAGf,QAAQ,CAACR,aAAa,CAAC,QAAQ,CAAC;EAC9C,MAAMwB,SAAS,GAAG,IAAI7B,SAAS,CAAC4B,KAAK,CAAC;EAEtCC,SAAS,CAACpB,YAAY,CAAC,CAAC;EAExBqB,WAAW,CAAC,MAAM;IAChBD,SAAS,CAAC1B,eAAe,CAAC,CAAC;IAC3B0B,SAAS,CAACpB,YAAY,CAAC,CAAC;EAC1B,CAAC,EAAE,IAAI,CAAC;AACV,CAAC,CAAC;;ACZuB","sources":["webpack://webpack5/./src/js/character.js","webpack://webpack5/./src/js/app.js","webpack://webpack5/./src/index.js"],"sourcesContent":["export default class Character {\n  constructor(element) {\n    this.element = element;\n  }\n\n  deleteCharacter() {\n    const cellActive = this.element.querySelector(\".cell-active\");\n    const characterImage = this.element.querySelector(\".character\");\n\n    if (cellActive && characterImage) {\n      cellActive.classList.remove(\"cell-active\");\n      characterImage.remove();\n    }\n  }\n\n  addCharacter() {\n    const cells = this.element.querySelectorAll(\".field-cell\");\n    const image = document.createElement(\"img\");\n    const number = Math.floor(Math.random() * cells.length);\n\n    for (let cell of cells) {\n      if (cell.dataset.id === number.toString()) {\n        cell.classList.add(\"cell-active\");\n        image.classList.add(\"character\");\n        image.src = \"./img/goblin.png\";\n        cell.appendChild(image);\n      }\n    }\n  }\n}\n","import Character from \"./character.js\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const field = document.querySelector(\".field\");\n  const character = new Character(field);\n\n  character.addCharacter();\n\n  setInterval(() => {\n    character.deleteCharacter();\n    character.addCharacter();\n  }, 2000);\n});\n","import \"./css/style.css\";\n\nimport \"./js/app.js\";\n"],"names":["Character","constructor","element","deleteCharacter","cellActive","querySelector","characterImage","classList","remove","addCharacter","cells","querySelectorAll","image","document","createElement","number","Math","floor","random","length","cell","dataset","id","toString","add","src","appendChild","addEventListener","field","character","setInterval"],"sourceRoot":""}